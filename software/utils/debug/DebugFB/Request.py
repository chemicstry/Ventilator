# automatically generated by the FlatBuffers compiler, do not modify

# namespace: DebugFB

import flatbuffers


class Request(object):
    __slots__ = ["_tab"]

    @classmethod
    def GetRootAsRequest(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = Request()
        x.Init(buf, n + offset)
        return x

    # Request
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Request
    def Cmd(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return 0

    # Request
    def CmddataType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 0

    # Request
    def Cmddata(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            from flatbuffers.table import Table

            obj = Table(bytearray(), 0)
            self._tab.Union(obj, o)
            return obj
        return None


def RequestStart(builder):
    builder.StartObject(3)


def RequestAddCmd(builder, cmd):
    builder.PrependInt8Slot(0, cmd, 0)


def RequestAddCmddataType(builder, cmddataType):
    builder.PrependUint8Slot(1, cmddataType, 0)


def RequestAddCmddata(builder, cmddata):
    builder.PrependUOffsetTRelativeSlot(
        2, flatbuffers.number_types.UOffsetTFlags.py_type(cmddata), 0
    )


def RequestEnd(builder):
    return builder.EndObject()
