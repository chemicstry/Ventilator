# automatically generated by the FlatBuffers compiler, do not modify

# namespace: DebugFlatbuf

import flatbuffers


class GetVarInfoResponse(object):
    __slots__ = ["_tab"]

    @classmethod
    def GetRootAsGetVarInfoResponse(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = GetVarInfoResponse()
        x.Init(buf, n + offset)
        return x

    # GetVarInfoResponse
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # GetVarInfoResponse
    def Access(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return 0

    # GetVarInfoResponse
    def Name(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # GetVarInfoResponse
    def Fmt(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # GetVarInfoResponse
    def Help(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # GetVarInfoResponse
    def Unit(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None


def GetVarInfoResponseStart(builder):
    builder.StartObject(5)


def GetVarInfoResponseAddAccess(builder, access):
    builder.PrependInt8Slot(0, access, 0)


def GetVarInfoResponseAddName(builder, name):
    builder.PrependUOffsetTRelativeSlot(
        1, flatbuffers.number_types.UOffsetTFlags.py_type(name), 0
    )


def GetVarInfoResponseAddFmt(builder, fmt):
    builder.PrependUOffsetTRelativeSlot(
        2, flatbuffers.number_types.UOffsetTFlags.py_type(fmt), 0
    )


def GetVarInfoResponseAddHelp(builder, help):
    builder.PrependUOffsetTRelativeSlot(
        3, flatbuffers.number_types.UOffsetTFlags.py_type(help), 0
    )


def GetVarInfoResponseAddUnit(builder, unit):
    builder.PrependUOffsetTRelativeSlot(
        4, flatbuffers.number_types.UOffsetTFlags.py_type(unit), 0
    )


def GetVarInfoResponseEnd(builder):
    return builder.EndObject()
